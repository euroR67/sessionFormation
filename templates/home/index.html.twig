{% extends 'base.html.twig' %}

{% block title %}Accueil{% endblock %}

{% block body %}
<div class="banner">
    <h2>Accueil</h2>
</div>
<div class="wrapper">

    <h3 class="first-drop"><i class="fa-solid fa-caret-right"></i> Sessions en cours</h3>

    <div class="table">
        {% for session in currentSessions %}
    <table class="table responsive first">
        <thead>
            <tr>
                <th>Status</th>
                <th>Formation</th>
                <th>Session</th>
                <th>Date de début</th>
                <th>Date de fin</th>
                <th>Inscrits</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            
                <tr>
                    {# Si la session est complète, on affiche "Session complète" #}
                    {% if session.nbPlace == session.stagiaires|length %}
                        <td data-label="Status" class="status-complet">Session complète</td>
                    {# Sinon on affiche "Session incomplet" #}
                    {% else %}
                        <td data-label="Status" class="status-incomplet">Session incomplet</td>
                    {% endif %}
                    {# Affiche le nom de la formation dont le stagiaire est inscrit #}
                    <td data-label="Formation">
                        <p>{{ session.formation }}</p>
                    </td>
                    {# Affiche le lien et le nom de la session dont le stagiaire est inscrit #}
                    <td data-label="Session">
                        <a class="session" href="{{ path('show_session', {'id': session.id}) }}">{{ session }}</a>
                    </td>
                    {# Affiche la date de début de la session #}
                    <td data-label="Date de début">
                        <p>{{ session.dateSession|date('d/m/Y') }}</p>
                    </td>
                    {# Affiche la date de fin de la session #}
                    <td data-label="Date de fin">
                        <p>{{ session.dateFin|date('d/m/Y') }}</p>
                    </td>
                    {# On affiche combien de stagiaire sont inscrit dans cet session #}
                    <td data-label="Inscrits">
                        <p>{{ session.stagiaires|length }} / {{ session.nbPlace }}</p>
                    </td>
                    {# Affiche le lien de désinscription #}
                    <td data-label="Actions" class="edit">
                        <a href="{{ path('edit_session', {'id': session.id }) }}"><i class="fa-regular fa-pen-to-square" style="color: #febe34;"></i></a>
                    </td>
                </tr>
            
        </tbody>
    </table>
    {% endfor %}
    </div>

    <h3 class="second-drop"><i class="fa-solid fa-caret-right"></i> Sessions à venir</h3>
    
    <div class="table">
    {% for session in futureSessions %}
        <table class="table responsive second">
            <thead>
                <tr>
                    <th>Status</th>
                    <th>Formation</th>
                    <th>Session</th>
                    <th>Date de début</th>
                    <th>Date de fin</th>
                    <th>Inscrits</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    {# Si la session est complète, on affiche "Session complète" #}
                    {% if session.nbPlace == session.stagiaires|length %}
                        <td data-label="Status" class="status-complet">Session complète</td>
                    {# Sinon on affiche "Session incomplet" #}
                    {% else %}
                        <td date-label="Status" class="status-incomplet">Session incomplet</td>
                    {% endif %}
                    {# Affiche le nom de la formation dont le stagiaire est inscrit #}
                    <td data-label="Formation">
                        <p>{{ session.formation }}</p>
                    </td>
                    {# Affiche le lien et le nom de la session dont le stagiaire est inscrit #}
                    <td data-label="Session">
                        <a class="session" href="{{ path('show_session', {'id': session.id}) }}">{{ session }}</a>
                    </td>
                    {# Affiche la date de début de la session #}
                    <td data-label="Date de début">
                        <p>{{ session.dateSession|date('d/m/Y') }}</p>
                    </td>
                    {# Affiche la date de fin de la session #}
                    <td data-label="Date de fin">
                        <p>{{ session.dateFin|date('d/m/Y') }}</p>
                    </td>
                    {# On affiche combien de stagiaire sont inscrit dans cet session #}
                    <td data-label="Inscrit">
                        <p>{{ session.stagiaires|length }} / {{ session.nbPlace }}</p>
                    </td>
                    {# Affiche le lien de désinscription #}
                    <td data-label="Actions" class="edit">
                        <a href="{{ path('edit_session', {'id': session.id }) }}"><i class="fa-regular fa-pen-to-square" style="color: #febe34;"></i></a>
                    </td>
                </tr>
            </tbody>
        </table>
    {% endfor %}
    </div>

    <h3 class="third-drop"><i class="fa-solid fa-caret-right"></i> Sessions à passées</h3>

    <div class="table">
        <table class="table responsive third">
            <thead>
                <tr>
                    <th>Status</th>
                    <th>Formation</th>
                    <th>Session</th>
                    <th>Date de début</th>
                    <th>Date de fin</th>
                    <th>Inscrits</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
    
    
    
                {% for session in pastSessions %}
                    <tr>
                        {# Si la session est complète, on affiche "Session complète" #}
                        {% if session.nbPlace == session.stagiaires|length %}
                            <td data-label="Status" class="status-complet">Session complète</td>
                        {# Sinon on affiche "Session incomplet" #}
                        {% else %}
                            <td data-label="Status"class="status-incomplet">Session incomplet</td>
                        {% endif %}
                        {# Affiche le nom de la formation dont le stagiaire est inscrit #}
                        <td data-label="Formation">
                            <p>{{ session.formation }}</p>
                        </td>
                        {# Affiche le lien et le nom de la session dont le stagiaire est inscrit #}
                        <td data-label="Session">
                            <a class="session" href="{{ path('show_session', {'id': session.id}) }}">{{ session }}</a>
                        </td>
                        {# Affiche la date de début de la session #}
                        <td data-label="Date de début">
                            <p>{{ session.dateSession|date('d/m/Y') }}</p>
                        </td>
                        {# Affiche la date de fin de la session #}
                        <td data-label="Date de fin">
                            <p>{{ session.dateFin|date('d/m/Y') }}</p>
                        </td>
                        {# On affiche combien de stagiaire sont inscrit dans cet session #}
                        <td data-label="Inscrits">
                            <p>{{ session.stagiaires|length }} / {{ session.nbPlace }}</p>
                        </td>
                        {# Affiche le lien de désinscription #}
                        <td data-label="Actions" class="edit">
                            <a href="{{ path('edit_session', {'id': session.id }) }}"><i class="fa-regular fa-pen-to-square" style="color: #febe34;"></i></a>
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    <script>

        document.addEventListener('DOMContentLoaded', function() {
            // On sélectionne les éléments du DOM nécessaires
            const firstDrop = document.querySelector('.first-drop');
            const secondDrop = document.querySelector('.second-drop');
            const thirdDrop = document.querySelector('.third-drop');
            const firstTable = document.querySelectorAll('.first');
            const secondTable = document.querySelectorAll('.second');
            const thirdTable = document.querySelectorAll('.third');
            // On sélectionne les flèches
            const firstArrow = document.querySelector('.first-drop i');
            const secondArrow = document.querySelector('.second-drop i');
            const thirdArrow = document.querySelector('.third-drop i');
        
            // On définie initialement le style display des tableaux à 'none' avec une boucle
            for (let i = 0; i < firstTable.length; i++) {
                firstTable[i].style.display = 'none';
            }
            for (let i = 0; i < secondTable.length; i++) {
                secondTable[i].style.display = 'none';
            }
            for (let i = 0; i < thirdTable.length; i++) {
                thirdTable[i].style.display = 'none';
            }
        
            // Fonction pour effectuer la rotation de 90 degrés sur la flèche
            function rotateArrow(arrow) {
                if (arrow.classList.contains('rotate')) {
                    arrow.classList.remove('rotate');
                } else {
                    arrow.classList.add('rotate');
                }
            }

            // Fonction pour afficher ou masquer les tableaux
            function displayTable(table) {
                if (table.style.display === 'none') {
                    table.style.display = 'table';
                } else {
                    table.style.display = 'none';
                }
            }

            // On ajoute un écouteur d'événement sur le premier titre
            firstDrop.addEventListener('click', () => {
                // On appelle la fonction pour effectuer la rotation de la flèche
                rotateArrow(firstArrow);
                // On appelle la fonction pour afficher ou masquer les tableaux
                for (let i = 0; i < firstTable.length; i++) {
                    displayTable(firstTable[i]);
                }
            });

            // On ajoute un écouteur d'événement sur le deuxième titre
            secondDrop.addEventListener('click', () => {
                // On appelle la fonction pour effectuer la rotation de la flèche
                rotateArrow(secondArrow);
                // On appelle la fonction pour afficher ou masquer les tableaux
                for (let i = 0; i < secondTable.length; i++) {
                    displayTable(secondTable[i]);
                }
            });

            // On ajoute un écouteur d'événement sur le troisième titre
            thirdDrop.addEventListener('click', () => {
                // On appelle la fonction pour effectuer la rotation de la flèche
                rotateArrow(thirdArrow);
                // On appelle la fonction pour afficher ou masquer les tableaux
                for (let i = 0; i < thirdTable.length; i++) {
                    displayTable(thirdTable[i]);
                }
            });
        });

    </script>

</div>
{% endblock %}
